<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0-windows7.0</TargetFramework>
    <OutputType>WinExe</OutputType>
    <PublishUrl>publish\</PublishUrl>
    <Install>true</Install>
    <InstallFrom>Disk</InstallFrom>
    <UpdateEnabled>false</UpdateEnabled>
    <UpdateMode>Foreground</UpdateMode>
    <UpdateInterval>7</UpdateInterval>
    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
    <UpdatePeriodically>false</UpdatePeriodically>
    <UpdateRequired>false</UpdateRequired>
    <MapFileExtensions>true</MapFileExtensions>
    <ApplicationRevision>0</ApplicationRevision>
    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
    <IsWebBootstrapper>false</IsWebBootstrapper>
    <UseApplicationTrust>false</UseApplicationTrust>
    <BootstrapperEnabled>true</BootstrapperEnabled>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <UseWindowsForms>True</UseWindowsForms>
    <ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64;AnyCPU</Platforms>


  </PropertyGroup>
  <!--<PropertyGroup Condition="'$(PlatformTarget)' == 'x64'">
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == ''">win-x64</RuntimeIdentifier>
    <SelfContained Condition="'$(SelfContained)' == ''">false</SelfContained>
  </PropertyGroup>-->
  <PropertyGroup>
    <ApplicationIcon>Notebook.ico</ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationManifest>app1.manifest</ApplicationManifest>
    <StartupObject>LinguaHelper.Program</StartupObject>
    <Copyright>Oleksii Nikitin</Copyright>
    <UseWPF>False</UseWPF>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="BrowserItem - Copy.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="credentials.json" />
  </ItemGroup>
  <ItemGroup>
    <None Update="Browser Settings\Browsers.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\Cambridge\Cambridge.js">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\css\dark.mode.general.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\css\dick.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\Default\Default.html">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\Default\style.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\General\GeneralBrowser.js">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\GoogleTranslate\dark.mode.google.translator.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\GoogleTranslate\dark.mode.google.translator OLD.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\GoogleTranslate\dark.mode.google.translator v2.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\Google\Google.js">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Browser Settings\oald\Oald.js">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="CSS\dark.mode.google.translator.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="CSS\dark.mode.css">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <None Update="Tasks.docx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CefSharp.WinForms.NETCore" Version="131.3.50" />
    <PackageReference Include="chromiumembeddedframework.runtime.win-arm64" />
    <PackageReference Include="chromiumembeddedframework.runtime.win-x64" />
    <PackageReference Include="chromiumembeddedframework.runtime.win-x86" />
    <PackageReference Include="Microsoft.PowerShell.SDK" Version="7.4.6" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\CustomTabControl\CustomTabControl.csproj" />
    <ProjectReference Include="..\RichTabControl\RichTabControl.csproj" />
    <ProjectReference Include="..\ThemeManager\ThemeManager.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Settings.Designer.cs">
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="chromiumembeddedframework.runtime.win-x64" Version="131.3.5" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="chromiumembeddedframework.runtime.win-arm64" Version="131.3.5" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="chromiumembeddedframework.runtime.win-x86" Version="131.3.5" />
  </ItemGroup>
  <!--<UsingTask TaskName="RemoveUnwantedRuntimes" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <OutputDirectory Required="true" ParameterType="System.String" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        
          var runtimesDir = Path.Combine(OutputDirectory, "runtimes");
          if (Directory.Exists(runtimesDir))
          {
              var directories = Directory.GetDirectories(runtimesDir);
              foreach (var dir in directories)
              {
                  if (!dir.EndsWith("win-x64") && !dir.EndsWith("win10-x64") && !dir.EndsWith("win"))
                  {
                      Directory.Delete(dir, true);
                  }
              }
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="RemoveUnwantedRuntimes" AfterTargets="Build">
    <RemoveUnwantedRuntimes OutputDirectory="$(OutDir)" />
  </Target> -->

 





</Project>